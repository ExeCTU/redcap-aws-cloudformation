commands:
  00mountencrypted:
    command: |
      #Create an encrypted EBS volume and mount it to store the HTTPD access_log and error_log.  Just in case PHI is written to these logs in error messages.
      mount='/var/log/nginx'
      if grep -qs "$mount" /proc/mounts; then
      echo "encrypted volume already mounted ..."
      else
      awszone=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
      awsregion=${awszone::-1}
      device='/dev/sdh'
      instanceId=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
      createJson=$(aws ec2 create-volume --size 4 --region $awsregion --availability-zone $awszone --volume-type standard --encrypted)
      volumeId=$(echo $createJson | sed -n 's/.*"VolumeId": "\(.*\)",/\1/p' | cut -d '"' -f 1)
      aws ec2 wait volume-available --region $awsregion --volume-ids $volumeId
      aws ec2 attach-volume --volume-id $volumeId --instance-id $instanceId --device $device --region $awsregion
      aws ec2 wait volume-in-use --region $awsregion --volume-ids $volumeId
      aws ec2 modify-instance-attribute --instance-id $instanceId --block-device-mappings DeviceName=$device,Ebs={DeleteOnTermination=true} --region $awsregion
      while [ `stat ${device} 2>/dev/null 1>&2; echo $?` -ne 0 ]; do
      sleep 1
      done
      mkfs -t ext3 $device
      mkdir /tmp/mnt
      cp -a $mount/* /tmp/mnt
      mount $device $mount
      cp -a /tmp/mnt/* $mount
      fi
    ignoreErrors: false
  01SelfSignedSSL:
    command: |
      #Generate a self-signed cert to be used between the AWS ALB and the Apache PHP servers.
      if [ ! -f /etc/pki/tls/certs/server.key ]; then
      openssl genrsa 2048 > server.key
      openssl req -new -key server.key -out csr.pem -subj "/C=US/ST=WA/L=Seattle/O=anon/OU=anon/CN=none/emailAddress=none"
      openssl x509 -req -days 365 -in csr.pem -signkey server.key -out server.crt
      cp server.crt server.key /etc/pki/tls/certs/
      rm -f server.crt server.key csr.pem
      cp /https.conf /etc/nginx/conf.d/
      rm /https.conf
      systemctl restart nginx
      else
      echo "Already have a self-signed private key.  This must be an application redeployment"
      fi